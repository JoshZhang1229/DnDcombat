#setup
import math
import random
# generate random integer values
from random import seed
from random import randint
# seed random number generator=
from datetime import datetime
random.seed(datetime.now())

import pygame
pygame.init()

SIZE = WIDTH, HEIGHT = (1024, 720)
FPS = 30
screen = pygame.display.set_mode(SIZE, pygame.RESIZABLE)
clock = pygame.time.Clock()

def blit_text(surface, text, pos, font, color=pygame.Color('black')):
    words = [word.split(' ') for word in text.splitlines()]  # 2D array where each row is a list of words.
    space = font.size(' ')[0]  # The width of a space.
    max_width, max_height = surface.get_size()
    x, y = pos
    for line in words:
        for word in line:
            word_surface = font.render(word, 0, color)
            word_width, word_height = word_surface.get_size()
            if x + word_width >= max_width:
                x = pos[0]  # Reset the x.
                y += word_height  # Start on new row.
            surface.blit(word_surface, (x, y))
            x += word_width + space
        x = pos[0]  # Reset the x.
        y += word_height  # Start on new row.


#DESIGN
#-------------------------------------

#font
font = pygame.font.SysFont('Arial', 32)
font_huge = pygame.font.SysFont('Arial', 64)


class Monarch():
    def __init__(self, Barbarian, Fighter, Monk, Rogue, Paladin, Ranger, \
        Wizard, Cleric, Druid, Warlock, Sorcerer, Bard, Artificer):
        self.Barbarian = Barbarian
        self.Fighter = Fighter
        self.Monk = Monk
        self.Rogue = Rogue
        self.Paladin = Paladin
        self.Ranger = Ranger
        self.Wizard = Wizard
        self.Cleric = Cleric
        self.Druid = Druid
        self.Warlock = Warlock
        self.Sorcerer = Sorcerer
        self.Bard = Bard
        self.Artificer = Artificer


you = Monarch(500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500)

class gap():
    def __init__(self):
        self.gap = False

def advisor_opinion_text():
    opinions_1 = "Barbarian:" + str(you.Barbarian) + " Fighter:" + str(you.Fighter) + " Monk:" + str(you.Monk) + \
        " Rogue:" + str(you.Rogue) + " Paladin:" + str(you.Paladin) + " Ranger:" + str(you.Ranger) + \
            " Wizard:" + str(you.Wizard) + " Cleric:" + str(you.Cleric) + " Druid:" + str(you.Druid) + \
                " Warlock:" + str(you.Warlock) + " Sorcerer:" + str(you.Sorcerer) + " Bard:" + str(you.Bard) + \
                    " Artificer:" + str(you.Artificer)

    blit_text(screen, opinions_1, (20, 600), font)


def answer_text():
    yes = "YES"
    blit_text(screen, yes, (20, 665), font_huge)
    no = "NO"
    blit_text(screen, no, (532, 665), font_huge)

    pygame.draw.line(screen, (0, 0, 0), (0, 650), (1024, 650))
    pygame.draw.line(screen, (0, 0, 0), (512, 650), (512, 720)) 


dilema = '''Dilema
'''

result = '''Result
'''

#this is just setup
def agree_opinion_changes():
    you.Fighter += 0

def disagree_opinion_changes():
    you.Fighter -= 0

#EVENTS
#---------------------------------

event_list = ["event_1()" , "event_2()"]

def new_event():
    eval(random.choice(event_list))

def event_1():
    global dilema
    global result_yes
    global result_no
    global agree_opinion_changes
    global disagree_opinion_changes

    dilema = "Should we build more libraries?"
    result_yes = "some people are happy"
    result_no = "some people are sad"
    
    def agree_opinion_changes():
        you.Fighter -= 200
        you.Bard += 200
    
    def disagree_opinion_changes():
        you.Fighter += 200
        you.Bard -= 200

def event_2():
    global dilema
    global result_yes
    global result_no
    global agree_opinion_changes
    global disagree_opinion_changes

    dilema = "Should we tax wizards?"
    result_yes = "Karla is pissed"
    result_no = "Karla is relieved"
    
    def agree_opinion_changes():
        you.Fighter += 200
        you.Bard -= 200
    
    def disagree_opinion_changes():
        you.Fighter -= 200
        you.Bard += 200

new_game = True
apply_result = gap()
#the game
while True:

    dt = clock.tick(FPS) / 1000

    screen.fill(pygame.Color('white'))

    blit_text(screen, dilema, (20, 20), font)
    blit_text(screen, result, (20, 300), font)
    advisor_opinion_text()
    answer_text()

    if new_game == True:
        new_game = False
        new_event()

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            quit()

        if event.type == pygame.MOUSEBUTTONDOWN:
            mx, my = pygame.mouse.get_pos()
            print (mx, my)

            if my > 650 and mx < 512:
                agree = True
                result = result_yes
                apply_result.gap = True
            
            elif my > 650 and mx >= 512:
                agree = False
                result = result_no
                apply_result.gap = True
            
            if apply_result.gap == True:
                apply_result.gap = False
                if agree == True:
                    agree_opinion_changes()
                elif agree == False:
                    disagree_opinion_changes()
                new_event()

    pygame.display.update()
